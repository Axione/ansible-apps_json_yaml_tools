---
- name: Get yq version # noqa 301
  ansible.builtin.command: "yq --version"
  register: yq_result
  changed_when: false
  failed_when: false

- name: Set yq current version fact
  ansible.builtin.set_fact:
    yq_current_version: "{{ yq_result.stdout | default('') | replace('yq version ','') }}"

- name: Get latest stable yq tag
  ansible.builtin.uri:
    url: "{{ yq_release_api_url }}"
  failed_when: false
  register: yq_github_result
  when: yq_version == 'latest'

- name: Set yq version fact to latest
  ansible.builtin.set_fact:
    yq_version: "{{ yq_github_result.json.tag_name | default(yq_default_version) | replace('v','') }}"
  when: yq_version == 'latest'

- name: Set yq version fact to default
  ansible.builtin.set_fact:
    yq_version: "{{ yq_default_version }}"
  when: not yq_version

- name: "Download yq binary {{ yq_version }}"
  ansible.builtin.get_url:
    url: "{{ yq_base_url }}/v{{ yq_version }}/yq_linux_amd64"
    dest: "/usr/local/bin/yq"
    mode: 0755
    force: true
  when: yq_current_version != yq_version
